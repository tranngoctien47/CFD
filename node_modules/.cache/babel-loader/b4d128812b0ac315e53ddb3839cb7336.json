{"ast":null,"code":"import { call, put } from \"@redux-saga/core/effects\";\nimport userApi from '../../api/userApi';\nimport { login, loginError, popupLogin } from '../actions/authAction';\nexport function* fetchLogin(action) {\n  let res = yield call(userApi.login, action.payload);\n\n  if (res.error) {\n    yield put(loginError(res.error));\n  } else {\n    localStorage.setItem('auth', JSON.stringify({\n      login: true,\n      user: res.data\n    }));\n    localStorage.setItem('token', JSON.stringify(res.data.token));\n    yield put(login(res.data));\n    yield put(popupLogin(false));\n  }\n}","map":{"version":3,"sources":["D:/CFD/react JS/react-cfd/src/redux/saga/authSaga.jsx"],"names":["call","put","userApi","login","loginError","popupLogin","fetchLogin","action","res","payload","error","localStorage","setItem","JSON","stringify","user","data","token"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,0BAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,uBAA9C;AAEA,OAAO,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAChC,MAAIC,GAAG,GAAG,MAAMR,IAAI,CAACE,OAAO,CAACC,KAAT,EAAgBI,MAAM,CAACE,OAAvB,CAApB;;AACA,MAAID,GAAG,CAACE,KAAR,EAAe;AACX,UAAMT,GAAG,CAACG,UAAU,CAACI,GAAG,CAACE,KAAL,CAAX,CAAT;AACH,GAFD,MAEO;AACHC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe;AACxCX,MAAAA,KAAK,EAAE,IADiC;AAExCY,MAAAA,IAAI,EAAEP,GAAG,CAACQ;AAF8B,KAAf,CAA7B;AAIAL,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeN,GAAG,CAACQ,IAAJ,CAASC,KAAxB,CAA9B;AAEA,UAAMhB,GAAG,CAACE,KAAK,CAACK,GAAG,CAACQ,IAAL,CAAN,CAAT;AAEA,UAAMf,GAAG,CAACI,UAAU,CAAC,KAAD,CAAX,CAAT;AACH;AACJ","sourcesContent":["import { call, put } from \"@redux-saga/core/effects\";\r\nimport userApi from '../../api/userApi'\r\nimport { login, loginError, popupLogin } from '../actions/authAction'\r\n\r\nexport function* fetchLogin(action) {\r\n    let res = yield call(userApi.login, action.payload)\r\n    if (res.error) {\r\n        yield put(loginError(res.error))\r\n    } else {\r\n        localStorage.setItem('auth', JSON.stringify({\r\n            login: true,\r\n            user: res.data\r\n        }))\r\n        localStorage.setItem('token', JSON.stringify(res.data.token))\r\n\r\n        yield put(login(res.data))\r\n\r\n        yield put(popupLogin(false))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}