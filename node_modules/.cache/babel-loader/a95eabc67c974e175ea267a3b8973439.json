{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function useFormValidate(initialForm, validate) {\n  _s();\n\n  let {\n    rule,\n    message\n  } = validate;\n  let [form, setForm] = useState(initialForm);\n  let [error, setError] = useState({});\n\n  function inputChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    let type = e.target.type;\n\n    if (type === 'checkbox') {\n      value = e.target.checked;\n    }\n\n    setForm({ ...form,\n      [name]: value\n    });\n  }\n\n  function check() {\n    let errorObj = {};\n\n    for (let i in rule) {\n      let r = rule[i];\n      let m = (message === null || message === void 0 ? void 0 : message[i]) || null;\n\n      if (r.required && !form[i]) {\n        errorObj[i] = (m === null || m === void 0 ? void 0 : m.required) || \"không được để trống\";\n      }\n    }\n\n    setError(errorObj);\n    return errorObj;\n  }\n\n  return {\n    form,\n    error,\n    inputChange,\n    check\n  };\n}\n\n_s(useFormValidate, \"1c/2IlqEH0T1njgkRNDQkurUb0s=\");","map":{"version":3,"sources":["D:/CFD/react JS/react-cfd/src/core/useFormValidate.jsx"],"names":["useState","useFormValidate","initialForm","validate","rule","message","form","setForm","error","setError","inputChange","e","name","target","value","type","checked","check","errorObj","i","r","m","required"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,eAAT,CAAyBC,WAAzB,EAAsCC,QAAtC,EAAgD;AAAA;;AAE3D,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,QAAxB;AAEA,MAAI,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACE,WAAD,CAA9B;AACA,MAAI,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAhC;;AAKA,WAASU,WAAT,CAAqBC,CAArB,EAAwB;AACpB,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAApB;AACA,QAAIE,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAArB;AACA,QAAIC,IAAI,GAAGJ,CAAC,CAACE,MAAF,CAASE,IAApB;;AAGA,QAAIA,IAAI,KAAK,UAAb,EAAyB;AACrBD,MAAAA,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASG,OAAjB;AACH;;AAGDT,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACM,IAAD,GAAQE;AAFJ,KAAD,CAAP;AAKH;;AACD,WAASG,KAAT,GAAiB;AACb,QAAIC,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAT,IAAcf,IAAd,EAAoB;AAChB,UAAIgB,CAAC,GAAGhB,IAAI,CAACe,CAAD,CAAZ;AACA,UAAIE,CAAC,GAAG,CAAAhB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAGc,CAAH,CAAP,KAAgB,IAAxB;;AAEA,UAAIC,CAAC,CAACE,QAAF,IAAc,CAAChB,IAAI,CAACa,CAAD,CAAvB,EAA4B;AACxBD,QAAAA,QAAQ,CAACC,CAAD,CAAR,GAAc,CAAAE,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,QAAH,KAAe,qBAA7B;AACH;AACJ;;AACDb,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACA,WAAQA,QAAR;AACH;;AAED,SAAO;AACHZ,IAAAA,IADG;AACGE,IAAAA,KADH;AACUE,IAAAA,WADV;AACuBO,IAAAA;AADvB,GAAP;AAGH;;GA7CuBhB,e","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function useFormValidate(initialForm, validate) {\r\n\r\n    let { rule, message } = validate;\r\n\r\n    let [form, setForm] = useState(initialForm)\r\n    let [error, setError] = useState({\r\n\r\n    })\r\n\r\n\r\n    function inputChange(e) {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        let type = e.target.type\r\n\r\n\r\n        if (type === 'checkbox') {\r\n            value = e.target.checked\r\n        }\r\n\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: value,\r\n\r\n        })\r\n    }\r\n    function check() {\r\n        let errorObj = {}\r\n\r\n        for (let i in rule) {\r\n            let r = rule[i]\r\n            let m = message?.[i] || null\r\n\r\n            if (r.required && !form[i]) {\r\n                errorObj[i] = m?.required || \"không được để trống\"\r\n            }\r\n        }\r\n        setError(errorObj)\r\n        return (errorObj)\r\n    }\r\n\r\n    return {\r\n        form, error, inputChange, check\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}