{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nlet emailPattern = /^[a-z][a-z0-9_\\.]{2,32}@[a-z0-9]{2,}(\\.[a-z0-9]{2,4}){1,2}$/i,\n    phonePattern = /(84|0[3|5|7|8|9])+([0-9]{8})\\b/i,\n    fbPattern = /(?:http:\\/\\/)?(?:www.)?facebook.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w\\-]*\\/)?(?:profile.php\\?id=(\\d.*))?([\\w\\-]*)?/i;\nexport default function useFormValidate(initialForm, validate) {\n  _s();\n\n  let {\n    rule,\n    message,\n    options\n  } = validate;\n  if (!options) options = {};\n  let v = initialForm;\n\n  if (options.localStorage) {\n    v = JSON.parse(localStorage.getItem(options.localStorage)) || initialForm;\n  }\n\n  let [form, setForm] = useState(v);\n  useEffect(() => {\n    if (options.localStorage) {\n      localStorage.setItem(options.localStorage, JSON.stringify(form));\n      return () => {\n        localStorage.removeItem(options.localStorage);\n      };\n    }\n  }, [form]);\n  let [error, setError] = useState({});\n\n  function inputChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    let type = e.target.type;\n\n    if (type === 'checkbox') {\n      value = e.target.checked;\n    }\n\n    setForm({ ...form,\n      [name]: value\n    });\n  }\n\n  function check() {\n    let errorObj = {};\n\n    for (let i in rule) {\n      let r = rule[i];\n      let m = (message === null || message === void 0 ? void 0 : message[i]) || null;\n\n      if (r.required && !form[i]) {\n        errorObj[i] = (m === null || m === void 0 ? void 0 : m.required) || \" không được để trống\";\n      }\n\n      if (r.pattern && form[i]) {\n        let pattern = r.pattern;\n        if (pattern === 'email') pattern = emailPattern;\n        if (pattern === 'phone') pattern = phonePattern;\n        if (pattern === 'facebook') pattern = fbPattern;\n\n        try {\n          if (!pattern.test(form[i])) {\n            errorObj[i] = (m === null || m === void 0 ? void 0 : m.pattern) || \"Không đúng định dạng\";\n          }\n        } catch (err) {\n          errorObj[i] = \"lỗi định dạng\";\n        }\n      }\n    }\n\n    setError(errorObj);\n    return errorObj;\n  }\n\n  return {\n    form,\n    error,\n    inputChange,\n    check\n  };\n}\n\n_s(useFormValidate, \"gMMwSwIb7Ga0sqAYUUZwsBZjHig=\");","map":{"version":3,"sources":["D:/CFD/react JS/react-cfd/src/core/useFormValidate.jsx"],"names":["useEffect","useState","emailPattern","phonePattern","fbPattern","useFormValidate","initialForm","validate","rule","message","options","v","localStorage","JSON","parse","getItem","form","setForm","setItem","stringify","removeItem","error","setError","inputChange","e","name","target","value","type","checked","check","errorObj","i","r","m","required","pattern","test","err"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nlet emailPattern = /^[a-z][a-z0-9_\\.]{2,32}@[a-z0-9]{2,}(\\.[a-z0-9]{2,4}){1,2}$/i,\r\n    phonePattern = /(84|0[3|5|7|8|9])+([0-9]{8})\\b/i,\r\n    fbPattern = /(?:http:\\/\\/)?(?:www.)?facebook.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w\\-]*\\/)?(?:profile.php\\?id=(\\d.*))?([\\w\\-]*)?/i\r\n\r\nexport default function useFormValidate(initialForm, validate) {\r\n\r\n    let { rule, message, options } = validate;\r\n\r\n    if (!options) options = {};\r\n\r\n    let v = initialForm;\r\n    if (options.localStorage) {\r\n        v = JSON.parse(localStorage.getItem(options.localStorage)) || initialForm\r\n    }\r\n    let [form, setForm] = useState(v)\r\n\r\n    useEffect(() => {\r\n\r\n        if (options.localStorage) {\r\n            localStorage.setItem(options.localStorage, JSON.stringify(form))\r\n            return () => {\r\n                localStorage.removeItem(options.localStorage)\r\n            }\r\n        }\r\n\r\n    }, [form])\r\n\r\n    let [error, setError] = useState({\r\n\r\n    })\r\n\r\n\r\n    function inputChange(e) {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        let type = e.target.type\r\n\r\n\r\n        if (type === 'checkbox') {\r\n            value = e.target.checked\r\n        }\r\n\r\n\r\n        setForm({\r\n            ...form,\r\n            [name]: value,\r\n\r\n        })\r\n    }\r\n    function check() {\r\n        let errorObj = {}\r\n\r\n        for (let i in rule) {\r\n            let r = rule[i]\r\n            let m = message?.[i] || null\r\n\r\n            if (r.required && !form[i]) {\r\n                errorObj[i] = m?.required || \" không được để trống\"\r\n            }\r\n\r\n            if (r.pattern && form[i]) {\r\n                let pattern = r.pattern\r\n                if (pattern === 'email') pattern = emailPattern\r\n                if (pattern === 'phone') pattern = phonePattern\r\n                if (pattern === 'facebook') pattern = fbPattern\r\n\r\n\r\n\r\n                try {\r\n                    if (!pattern.test(form[i])) {\r\n                        errorObj[i] = m?.pattern || \"Không đúng định dạng\"\r\n                    }\r\n                } catch (err) {\r\n                    errorObj[i] = \"lỗi định dạng\"\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n        setError(errorObj)\r\n        return (errorObj)\r\n    }\r\n\r\n    return {\r\n        form, error, inputChange, check\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}