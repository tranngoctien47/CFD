{"ast":null,"code":"var _jsxFileName = \"D:\\\\CFD\\\\react JS\\\\react-cfd\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from 'react';\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport './assets/css/custom.css';\nimport AppProvider from './core/AppProvider';\nimport renderRouters from './core/routersConfig';\nimport routers from './routers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let Context = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  let [auth, setAuth] = useState({\n    login: false,\n    user: null\n  });\n\n  function handleLogin() {\n    setAuth({\n      login: true,\n      user: {\n        name: \"Đặng Thuyền Vương\"\n      }\n    });\n  }\n\n  function logout() {\n    setAuth({\n      login: false,\n      user: null\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    children: renderRouters(routers)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this) // <Context.Provider value={{ ...auth, handleLogin, logout }}>\n  //   <BrowserRouter>\n  //   </BrowserRouter>\n  // </Context.Provider>\n  ;\n}\n\n_s(App, \"nvwOqJNFvx8Po0VsuAqxP4IFHVs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/CFD/react JS/react-cfd/src/App.js"],"names":["React","useContext","useRef","useState","BrowserRouter","Route","Switch","useHistory","AppProvider","renderRouters","routers","Context","createContext","App","auth","setAuth","login","user","handleLogin","name","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SACEC,aADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,kBALP;AAOA,OAAO,yBAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,OAAO,IAAIC,OAAO,gBAAGX,KAAK,CAACY,aAAN,EAAd;;AAEP,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC7Ba,IAAAA,KAAK,EAAE,KADsB;AAE7BC,IAAAA,IAAI,EAAE;AAFuB,GAAD,CAA9B;;AAMA,WAASC,WAAT,GAAuB;AACrBH,IAAAA,OAAO,CAAC;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,IAAI,EAAE;AACJE,QAAAA,IAAI,EAAE;AADF;AAFA,KAAD,CAAP;AAMD;;AACD,WAASC,MAAT,GAAkB;AAChBL,IAAAA,OAAO,CAAC;AACNC,MAAAA,KAAK,EAAE,KADD;AAENC,MAAAA,IAAI,EAAE;AAFA,KAAD,CAAP;AAID;;AAKD,sBACE,QAAC,WAAD;AAAA,cACGR,aAAa,CAACC,OAAD;AADhB;AAAA;AAAA;AAAA;AAAA,UADF,CAIE;AACA;AAEA;AACA;AARF;AAWD;;GApCQG,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React, { useContext, useRef, useState } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  useHistory\n} from 'react-router-dom'\n\nimport './assets/css/custom.css';\nimport AppProvider from './core/AppProvider';\n\nimport renderRouters from './core/routersConfig';\nimport routers from './routers';\n\nexport let Context = React.createContext()\n\nfunction App() {\n  let [auth, setAuth] = useState({\n    login: false,\n    user: null\n  })\n\n\n  function handleLogin() {\n    setAuth({\n      login: true,\n      user: {\n        name: \"Đặng Thuyền Vương\"\n      }\n    })\n  }\n  function logout() {\n    setAuth({\n      login: false,\n      user: null\n    })\n  }\n\n\n\n\n  return (\n    <AppProvider>\n      {renderRouters(routers)}\n    </AppProvider>\n    // <Context.Provider value={{ ...auth, handleLogin, logout }}>\n    //   <BrowserRouter>\n\n    //   </BrowserRouter>\n    // </Context.Provider>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}