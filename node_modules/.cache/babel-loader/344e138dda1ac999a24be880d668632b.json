{"ast":null,"code":"import { AUTH_LOGIN, AUTH_LOGIN_ERROR, AUTH_LOGOUT, AUTH_POPUP, AUTH_UPDATEINFO } from '../../redux/type';\nlet initialState = JSON.parse(localStorage.getItem('auth')) || {\n  login: false,\n  user: null,\n  popupOpen: false,\n  loginError: null\n};\nexport default function authReducer(state = initialState, active) {\n  switch (active.type) {\n    case AUTH_POPUP:\n      return { ...state,\n        popupOpen: active.payload\n      };\n\n    case AUTH_LOGIN:\n      localStorage.setItem('auth', JSON.stringify({\n        user: active.payload,\n        login: true\n      }));\n\n      if (active.payload.token) {\n        localStorage.setItem('token', JSON.stringify(active.payload.token));\n      }\n\n      return { ...state,\n        login: true,\n        user: active.payload\n      };\n\n    case AUTH_LOGOUT:\n      localStorage.removeItem('auth');\n      localStorage.removeItem('token');\n      return { ...state,\n        login: false,\n        user: null\n      };\n\n    case AUTH_UPDATEINFO:\n      return { ...state,\n        user: active.payload\n      };\n\n    case AUTH_LOGIN_ERROR:\n      return { ...state,\n        loginError: active.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/CFD/react JS/react-cfd/src/redux/reducers/authReducer.jsx"],"names":["AUTH_LOGIN","AUTH_LOGIN_ERROR","AUTH_LOGOUT","AUTH_POPUP","AUTH_UPDATEINFO","initialState","JSON","parse","localStorage","getItem","login","user","popupOpen","loginError","authReducer","state","active","type","payload","setItem","stringify","token","removeItem"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,gBAArB,EAAuCC,WAAvC,EAAoDC,UAApD,EAAgEC,eAAhE,QAAuF,kBAAvF;AAIA,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C;AAC3DC,EAAAA,KAAK,EAAE,KADoD;AAE3DC,EAAAA,IAAI,EAAE,IAFqD;AAG3DC,EAAAA,SAAS,EAAE,KAHgD;AAI3DC,EAAAA,UAAU,EAAE;AAJ+C,CAA/D;AAOA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGV,YAA7B,EAA2CW,MAA3C,EAAmD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,UAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHH,QAAAA,SAAS,EAAEI,MAAM,CAACE;AAFf,OAAP;;AAKJ,SAAKlB,UAAL;AAGIQ,MAAAA,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACc,SAAL,CAAe;AACxCT,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAD2B;AAExCR,QAAAA,KAAK,EAAE;AAFiC,OAAf,CAA7B;;AAIA,UAAIM,MAAM,CAACE,OAAP,CAAeG,KAAnB,EAA0B;AACtBb,QAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8Bb,IAAI,CAACc,SAAL,CAAeJ,MAAM,CAACE,OAAP,CAAeG,KAA9B,CAA9B;AACH;;AACD,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,KAAK,EAAE,IAFJ;AAGHC,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAHV,OAAP;;AAOJ,SAAKhB,WAAL;AACIM,MAAAA,YAAY,CAACc,UAAb,CAAwB,MAAxB;AACAd,MAAAA,YAAY,CAACc,UAAb,CAAwB,OAAxB;AACA,aAAO,EACH,GAAGP,KADA;AAEHL,QAAAA,KAAK,EAAE,KAFJ;AAGHC,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAKJ,SAAKP,eAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAFV,OAAP;;AAKJ,SAAKjB,gBAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFhB,OAAP;;AAIJ;AACI,aAAOH,KAAP;AA5CR;AA+CH","sourcesContent":["import { AUTH_LOGIN, AUTH_LOGIN_ERROR, AUTH_LOGOUT, AUTH_POPUP, AUTH_UPDATEINFO } from '../../redux/type'\r\n\r\n\r\n\r\nlet initialState = JSON.parse(localStorage.getItem('auth')) || {\r\n    login: false,\r\n    user: null,\r\n    popupOpen: false,\r\n    loginError: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, active) {\r\n    switch (active.type) {\r\n        case AUTH_POPUP:\r\n            return {\r\n                ...state,\r\n                popupOpen: active.payload\r\n            }\r\n\r\n        case AUTH_LOGIN:\r\n\r\n\r\n            localStorage.setItem('auth', JSON.stringify({\r\n                user: active.payload,\r\n                login: true\r\n            }))\r\n            if (active.payload.token) {\r\n                localStorage.setItem('token', JSON.stringify(active.payload.token))\r\n            }\r\n            return {\r\n                ...state,\r\n                login: true,\r\n                user: active.payload\r\n            }\r\n\r\n\r\n        case AUTH_LOGOUT:\r\n            localStorage.removeItem('auth')\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                login: false,\r\n                user: null\r\n            }\r\n        case AUTH_UPDATEINFO:\r\n            return {\r\n                ...state,\r\n                user: active.payload\r\n            }\r\n\r\n        case AUTH_LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                loginError: active.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}