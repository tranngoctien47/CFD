{"ast":null,"code":"var _jsxFileName = \"D:\\\\CFD\\\\react JS\\\\react-cfd\\\\src\\\\core\\\\routersConfig.jsx\";\nimport { Route, Switch } from \"react-router\";\nimport PrivateRouter from \"./PrivateRouter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function renderRouters(routers, pathParrent = '') {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: routers.map(e => {\n      let {\n        exact,\n        path,\n        component: Component,\n        routers: childRouters,\n        auth\n      } = e;\n      if (!path) path = '';\n      path = pathParrent + path;\n      path = path.replace(/\\/+/g, '/');\n      let children = null;\n\n      if (childRouters) {\n        children = renderRouters(childRouters, path);\n      }\n\n      if (auth) {\n        return /*#__PURE__*/_jsxDEV(PrivateRouter, {\n          exact: exact,\n          path: path,\n          component: prop => /*#__PURE__*/_jsxDEV(Component, { ...prop,\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 90\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: exact,\n        path: path,\n        component: prop => /*#__PURE__*/_jsxDEV(Component, { ...prop,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["D:/CFD/react JS/react-cfd/src/core/routersConfig.jsx"],"names":["Route","Switch","PrivateRouter","renderRouters","routers","pathParrent","map","e","exact","path","component","Component","childRouters","auth","replace","children","prop"],"mappings":";AACA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAIA,eAAe,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,WAAW,GAAG,EAA9C,EAAkD;AAC7D,sBAAO,QAAC,MAAD;AAAA,cAECD,OAAO,CAACE,GAAR,CAAYC,CAAC,IAAI;AAEb,UAAI;AAAEC,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA,SAAS,EAAEC,SAA1B;AAAqCP,QAAAA,OAAO,EAAEQ,YAA9C;AAA4DC,QAAAA;AAA5D,UAAqEN,CAAzE;AAEA,UAAI,CAACE,IAAL,EAAWA,IAAI,GAAG,EAAP;AACXA,MAAAA,IAAI,GAAGJ,WAAW,GAAGI,IAArB;AAEAA,MAAAA,IAAI,GAAGA,IAAI,CAACK,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP;AAGA,UAAIC,QAAQ,GAAG,IAAf;;AACA,UAAIH,YAAJ,EAAkB;AACdG,QAAAA,QAAQ,GAAGZ,aAAa,CAACS,YAAD,EAAeH,IAAf,CAAxB;AACH;;AAED,UAAII,IAAJ,EAAU;AACN,4BAAO,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEL,KAAtB;AAA6B,UAAA,IAAI,EAAEC,IAAnC;AAAyC,UAAA,SAAS,EAAGO,IAAD,iBAAU,QAAC,SAAD,OAAeA,IAAf;AAAA,sBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AACD,0BAAO,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEP,KAAd;AAAqB,QAAA,IAAI,EAAEC,IAA3B;AAAiC,QAAA,SAAS,EAAGO,IAAD,iBAAU,QAAC,SAAD,OAAeA,IAAf;AAAA,oBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAnBD;AAFD;AAAA;AAAA;AAAA;AAAA,UAAP;AAyBH","sourcesContent":["\r\nimport { Route, Switch } from \"react-router\"\r\nimport PrivateRouter from \"./PrivateRouter\";\r\n\r\n\r\n\r\nexport default function renderRouters(routers, pathParrent = '') {\r\n    return <Switch>\r\n        {\r\n            routers.map(e => {\r\n\r\n                let { exact, path, component: Component, routers: childRouters, auth } = e\r\n\r\n                if (!path) path = ''\r\n                path = pathParrent + path\r\n\r\n                path = path.replace(/\\/+/g, '/')\r\n\r\n\r\n                let children = null;\r\n                if (childRouters) {\r\n                    children = renderRouters(childRouters, path)\r\n                }\r\n\r\n                if (auth) {\r\n                    return <PrivateRouter exact={exact} path={path} component={(prop) => <Component {...prop}>{children}</Component>} />\r\n                }\r\n                return <Route exact={exact} path={path} component={(prop) => <Component {...prop}>{children}</Component>} />\r\n            })\r\n        }\r\n    </Switch>\r\n\r\n}"]},"metadata":{},"sourceType":"module"}