{"ast":null,"code":"// import { AUTH_LOGIN, AUTH_LOGIN_ERROR, AUTH_LOGOUT, AUTH_POPUP, AUTH_UPDATEINFO } from '../type'\nimport createSlice from \"../../core/createSlice\";\nlet initialState = JSON.parse(localStorage.getItem('auth')) || {\n  login: false,\n  user: null,\n  popupOpen: false,\n  loginError: null,\n  loading: true\n}; // export default function authReducer(state = initialState, action) {\n//     switch (action.type) {\n//         case AUTH_POPUP:\n//             return {\n//                 ...state,\n//                 popupOpen: action.payload\n//             }\n//         case AUTH_LOGIN:\n//             // localStorage.setItem('auth', JSON.stringify({\n//             //     user: action.payload,\n//             //     login: true\n//             // }))\n//             // if (action.payload.token) {\n//             //     localStorage.setItem('token', JSON.stringify(action.payload.token))\n//             // }\n//             return {\n//                 ...state,\n//                 login: true,\n//                 user: action.payload\n//             }\n//         case AUTH_LOGOUT:\n//             return {\n//                 ...state,\n//                 login: false,\n//                 user: null\n//             }\n//         case AUTH_UPDATEINFO:\n//             return {\n//                 ...state,\n//                 user: action.payload\n//             }\n//         case AUTH_LOGIN_ERROR:\n//             return {\n//                 ...state,\n//                 loginError: action.payload\n//             }\n//         default:\n//             return state;\n//     }\n// }\n\nlet {\n  action,\n  type,\n  reducer\n} = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    popupLogin(state, action) {\n      return { ...state,\n        popupOpen: action.payload\n      };\n    },\n\n    login(state, action) {\n      return { ...state,\n        login: true,\n        user: action.payload\n      };\n    },\n\n    logout(state, action) {\n      return { ...state,\n        login: false,\n        user: null\n      };\n    },\n\n    updateInfo(state, action) {\n      return { ...state,\n        user: action.payload\n      };\n    },\n\n    loginError(state, action) {\n      return { ...state,\n        loginError: action.payload\n      };\n    },\n\n    fetchLogin(state, action) {\n      return state;\n    }\n\n  }\n});\nexport default reducer;\nexport const AUTH = type;\nconsole.log(AUTH);\nexport const {\n  popupLogin,\n  login,\n  logout,\n  updateInfo,\n  loginError,\n  fetchLogin\n} = action;","map":{"version":3,"sources":["D:/CFD/react JS/react-cfd/src/redux/reducers/authReducer.jsx"],"names":["createSlice","initialState","JSON","parse","localStorage","getItem","login","user","popupOpen","loginError","loading","action","type","reducer","name","reducers","popupLogin","state","payload","logout","updateInfo","fetchLogin","AUTH","console","log"],"mappings":"AAAA;AACA,OAAOA,WAAP,MAAwB,wBAAxB;AAIA,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C;AAC3DC,EAAAA,KAAK,EAAE,KADoD;AAE3DC,EAAAA,IAAI,EAAE,IAFqD;AAG3DC,EAAAA,SAAS,EAAE,KAHgD;AAI3DC,EAAAA,UAAU,EAAE,IAJ+C;AAK3DC,EAAAA,OAAO,EAAE;AALkD,CAA/D,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,IAAI;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,IAA4Bb,WAAW,CAAC;AACxCc,EAAAA,IAAI,EAAE,MADkC;AAExCb,EAAAA,YAFwC;AAGxCc,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAQN,MAAR,EAAgB;AACtB,aAAO,EACH,GAAGM,KADA;AAEHT,QAAAA,SAAS,EAAEG,MAAM,CAACO;AAFf,OAAP;AAIH,KANK;;AAONZ,IAAAA,KAAK,CAACW,KAAD,EAAQN,MAAR,EAAgB;AACjB,aAAO,EACH,GAAGM,KADA;AAEHX,QAAAA,KAAK,EAAE,IAFJ;AAGHC,QAAAA,IAAI,EAAEI,MAAM,CAACO;AAHV,OAAP;AAKH,KAbK;;AAcNC,IAAAA,MAAM,CAACF,KAAD,EAAQN,MAAR,EAAgB;AAClB,aAAO,EACH,GAAGM,KADA;AAEHX,QAAAA,KAAK,EAAE,KAFJ;AAGHC,QAAAA,IAAI,EAAE;AAHH,OAAP;AAKH,KApBK;;AAqBNa,IAAAA,UAAU,CAACH,KAAD,EAAQN,MAAR,EAAgB;AACtB,aAAO,EACH,GAAGM,KADA;AAEHV,QAAAA,IAAI,EAAEI,MAAM,CAACO;AAFV,OAAP;AAIH,KA1BK;;AA2BNT,IAAAA,UAAU,CAACQ,KAAD,EAAQN,MAAR,EAAgB;AACtB,aAAO,EACH,GAAGM,KADA;AAEHR,QAAAA,UAAU,EAAEE,MAAM,CAACO;AAFhB,OAAP;AAIH,KAhCK;;AAiCNG,IAAAA,UAAU,CAACJ,KAAD,EAAQN,MAAR,EAAgB;AACtB,aAAOM,KAAP;AACH;;AAnCK;AAH8B,CAAD,CAA3C;AA8CA,eAAeJ,OAAf;AAEA,OAAO,MAAMS,IAAI,GAAGV,IAAb;AACPW,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,OAAO,MAAM;AAAEN,EAAAA,UAAF;AAAcV,EAAAA,KAAd;AAAqBa,EAAAA,MAArB;AAA6BC,EAAAA,UAA7B;AAAyCX,EAAAA,UAAzC;AAAqDY,EAAAA;AAArD,IAAoEV,MAA1E","sourcesContent":["// import { AUTH_LOGIN, AUTH_LOGIN_ERROR, AUTH_LOGOUT, AUTH_POPUP, AUTH_UPDATEINFO } from '../type'\r\nimport createSlice from \"../../core/createSlice\";\r\n\r\n\r\n\r\nlet initialState = JSON.parse(localStorage.getItem('auth')) || {\r\n    login: false,\r\n    user: null,\r\n    popupOpen: false,\r\n    loginError: null,\r\n    loading: true,\r\n}\r\n\r\n// export default function authReducer(state = initialState, action) {\r\n//     switch (action.type) {\r\n//         case AUTH_POPUP:\r\n//             return {\r\n//                 ...state,\r\n//                 popupOpen: action.payload\r\n//             }\r\n\r\n//         case AUTH_LOGIN:\r\n\r\n\r\n//             // localStorage.setItem('auth', JSON.stringify({\r\n//             //     user: action.payload,\r\n//             //     login: true\r\n//             // }))\r\n//             // if (action.payload.token) {\r\n//             //     localStorage.setItem('token', JSON.stringify(action.payload.token))\r\n//             // }\r\n//             return {\r\n//                 ...state,\r\n//                 login: true,\r\n//                 user: action.payload\r\n//             }\r\n\r\n\r\n//         case AUTH_LOGOUT:\r\n\r\n//             return {\r\n//                 ...state,\r\n//                 login: false,\r\n//                 user: null\r\n//             }\r\n//         case AUTH_UPDATEINFO:\r\n//             return {\r\n//                 ...state,\r\n//                 user: action.payload\r\n//             }\r\n\r\n//         case AUTH_LOGIN_ERROR:\r\n//             return {\r\n//                 ...state,\r\n//                 loginError: action.payload\r\n//             }\r\n//         default:\r\n//             return state;\r\n//     }\r\n\r\n// }\r\n\r\n\r\nlet { action, type, reducer } = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        popupLogin(state, action) {\r\n            return {\r\n                ...state,\r\n                popupOpen: action.payload\r\n            }\r\n        },\r\n        login(state, action) {\r\n            return {\r\n                ...state,\r\n                login: true,\r\n                user: action.payload\r\n            }\r\n        },\r\n        logout(state, action) {\r\n            return {\r\n                ...state,\r\n                login: false,\r\n                user: null\r\n            }\r\n        },\r\n        updateInfo(state, action) {\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        },\r\n        loginError(state, action) {\r\n            return {\r\n                ...state,\r\n                loginError: action.payload\r\n            }\r\n        },\r\n        fetchLogin(state, action) {\r\n            return state;\r\n        },\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\n\r\nexport default reducer;\r\n\r\nexport const AUTH = type;\r\nconsole.log(AUTH);\r\n\r\nexport const { popupLogin, login, logout, updateInfo, loginError, fetchLogin } = action;\r\n"]},"metadata":{},"sourceType":"module"}